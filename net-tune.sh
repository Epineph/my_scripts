#!/usr/bin/env bash
#───────────────────────────────────────────────────────────────────────────────
# net-tune.sh – Minimal network‐stack tuning with rollback for Arch Linux
#
#  USAGE:
#    sudo ./net-tune.sh apply      # enable BBR + fq_codel (+ optional Wi-Fi tweak)
#    sudo ./net-tune.sh status     # show current values
#    sudo ./net-tune.sh rollback   # restore previous configuration
#
#  DEPENDS: iproute2  kmod  networkmanager
#
#  ROLLBACK STRATEGY:
#    * sysctl values saved to /var/backups/net-tune/YYYY-MM-DD_HHMMSS.sysctl
#    * the generated /etc/sysctl.d/99-net-tune.conf is removed
#    * Wi-Fi power-save reverted on all existing NM connections
#───────────────────────────────────────────────────────────────────────────────
set -euo pipefail

CONF_FILE="/etc/sysctl.d/99-net-tune.conf"
BACKUP_DIR="/var/backups/net-tune"
TIMESTAMP="$(date +'%Y-%m-%d_%H%M%S')"
BACKUP_SYSCTL="${BACKUP_DIR}/${TIMESTAMP}.sysctl"

# Keys we intend to modify – capture their current values for safe rollback
SYSCTL_KEYS=(
  net.ipv4.tcp_congestion_control
  net.core.default_qdisc
)

# Colours for nicer status output (no external deps)
clr() { [[ -t 1 ]] && printf '\e[1;%sm%s\e[0m' "$1" "$2" || printf '%s' "$2"; }

#───────────────────────────────────────────────────────────────────────────────
backup_sysctl() {
  mkdir -p "$BACKUP_DIR"
  { for key in "${SYSCTL_KEYS[@]}"; do sysctl -n "$key"; done; } |
    paste -d' ' <(printf "%s\n" "${SYSCTL_KEYS[@]}") - \
      >"$BACKUP_SYSCTL"
}

restore_sysctl() {
  if [[ -f "$BACKUP_SYSCTL" ]]; then
    while read -r key val; do
      sysctl -w "$key=$val" >/dev/null
    done <"$BACKUP_SYSCTL"
  fi
}

wifi_powersave() {
  # $1 = 2 (disable) | 3 (enable – default)
  nmcli -t -f NAME,TYPE connection | while IFS=: read -r name type; do
    [[ $type == wifi ]] && nmcli connection modify "$name" 802-11-wireless.powersave "$1"
  done
}

#───────────────────────────────────────────────────────────────────────────────
apply() {
  echo -e "$(clr 32 '>>') Backing up current sysctl values to ${BACKUP_SYSCTL}"
  backup_sysctl

  echo -e "$(clr 32 '>>') Writing ${CONF_FILE}"
  cat >"$CONF_FILE" <<'EOF'
# 99-net-tune.conf – generated by net-tune.sh
# Improve throughput and latency:
net.core.default_qdisc = fq_codel
net.ipv4.tcp_congestion_control = bbr
EOF

  echo -e "$(clr 32 '>>') Loading tcp_bbr module (if not built-in)"
  modprobe -q tcp_bbr || true

  echo -e "$(clr 32 '>>') Applying new sysctl settings"
  sysctl --system >/dev/null

  echo -e "$(clr 32 '>>') Disabling Wi-Fi power-save on NetworkManager profiles (optional)"
  wifi_powersave 2 || true

  echo -e "$(clr 32 '>>') Done. Reboot is recommended but not strictly required."
}

rollback() {
  echo -e "$(clr 31 '<<') Rolling back..."
  [[ -f "$CONF_FILE" ]] && rm -f "$CONF_FILE"
  restore_sysctl
  wifi_powersave 3 || true
  echo -e "$(clr 31 '<<') Original configuration restored."
}

status() {
  echo "Current kernel tunables:"
  for k in "${SYSCTL_KEYS[@]}"; do
    printf "  %-33s %s\n" "$k" "$(sysctl -n "$k")"
  done
  echo
  echo "NetworkManager Wi-Fi power-save state:"
  nmcli -t -f NAME,802-11-wireless.powersave connection | column -t -s :
}

#───────────────────────────────────────────────────────────────────────────────
case "${1:-}" in
apply) apply ;;
rollback) rollback ;;
status) status ;;
*)
  echo "Usage: $0 {apply|rollback|status}"
  exit 1
  ;;
esac
